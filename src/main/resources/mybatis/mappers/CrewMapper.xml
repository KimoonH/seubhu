<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.community.mapper.CrewMapper">

  <!-- void insertCrew(@Param("crew") Crew crew); -->
  <insert id="insertCrew">
    insert into CREWS
    (
    crew_schedule
    , crew_location
    , crew_title
    , crew_name
    , crew_description
    <if test="crew.thumbnail != null">
        , crew_thumbnail
    </if>
    , crew_updated_date
    <if test="crew.uploadFile != null">
      , file_name
    </if>
    )
    values
    (
    #{crew.schedule}
    , #{crew.location}
    , #{crew.title}
    , #{crew.name}
    , #{crew.description}
    <if test="crew.thumbnail != null">
      , #{crew.thumbnail.saveName}
    </if>
    , null
    <if test="crew.uploadFile != null">
      , #{crew.uploadFile.saveName}
    </if>
    )
    <selectKey resultType="int" keyProperty="crew.no" keyColumn="crew_no" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <!-- void insertCrewMember(@Param("member") CrewMember member); -->
  <insert id="insertCrewMember">
    insert into CREW_MEMBERS
    ( crew_no
    , is_reader
    , crew_join_date
    , is_join
    , user_no)
    values ( #{member.crewNo}
           , #{member.reader}
           , #{member.joinDate}
           , #{member.join}
           , #{member.user.no})
  </insert>

  <!-- List<Crew> getCrews(@Param("condition") Map<String, Object> condition); -->
  <select id="getCrews" resultType="store.seub2hu2.community.vo.Crew">
    select *
    from (select row_number() over(order by c.crew_created_date desc) rn
              , c.crew_no as no
              , c.crew_title      as title
              , c.crew_location   as location
              , c.crew_name       as name
              , c.is_joined       as joined
              , c.crew_thumbnail  as "thumbnail.saveName"
          from
            CREWS c
          where c.is_deleted = 'N') as crew
    where rn between #{condition.begin} and #{condition.end}
    order by rn
  </select>

  <!-- int getTotalRowsForCrew(@Param("condition") Map<String, Object> condition); -->
  <select id="getTotalRowsForCrew" resultType="int">
    select count(*)
    from CREWS crew
    where is_deleted = 'N'
  </select>

  <!-- Crew getCrewDetailByNo(@Param("no") int crewNo); -->
  <select id="getCrewDetailByNo" resultType="store.seub2hu2.community.vo.Crew">
    select c.crew_no            as no
    , c.crew_title             as title
    , c.crew_schedule          as schedule
    , c.crew_location          as location
    , c.crew_name              as name
    , c.crew_description       as description
    , c.crew_created_date      as createdDate
    , case
        when c.file_name is not null then (select f.file_original_name
                                           from CREW_FILES f
                                           where f.crew_no = c.crew_no
                                           and f.file_save_name = c.file_name)
       else null
    end as "uploadFile.originalName"
    , case
        when c.crew_thumbnail is not null then (select f.file_save_name
                                                from CREW_FILES f
                                                where f.crew_no = c.crew_no
                                                and f.file_save_name = c.crew_thumbnail
                                                )
        else null
    end as "thumbnail.savaName"
    , c.is_joined              as joined
    , c.crew_view_cnt          as viewCnt
    , u.user_nickname          as "user.nickname"
    from CREWS c join CREW_MEMBERS cm
    on c.crew_no = cm.crew_no
    join USERS u
    on cm.user_no = u.user_no
    where
        c.crew_no = #{no}
  </select>

  <!-- void updateCrewCnt(@Param("crew") Crew crew); -->
  <update id="updateCrewCnt">
    update CREWS
    set crew_view_cnt = #{crew.viewCnt}
    where crew_no = #{crew.no}
  </update>

  <!-- void updateCrew(@Param("crew") Crew crew); -->
  <update id="updateCrew">
    update CREWS
    set crew_title = ${crew.title}
        , crew_description = ${crew.description}
        , crew_schedule = ${crew.schedule}
        , crew_location = ${crew.location}
        , crew_name = ${crew.name}
        , crew_thumbnail = ${crew.thumbnail.saveName}
        , crew_updated_date = sysdate()
        , file_name = ${crew.uploadFile.saveName}
        , is_deleted = ${crew.deleted}
    where
        crew_no = ${crew.no}

  </update>

  <!-- int getCrewMemberCnt(@Param("member") CrewMember member); -->


</mapper>
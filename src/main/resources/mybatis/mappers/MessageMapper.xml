<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.message.mapper.MessageMapper">

    <!-- 메시지 삽입 -->
    <insert id="insertMessage" parameterType="store.seub2hu2.message.vo.Message">
        INSERT INTO MESSAGES (USER_NO, MESSAGE_TITLE, MESSAGE_CONTENT, MESSAGE_CREATED_DATE)
        VALUES (#{userNo}, #{title}, #{content}, NOW())
    </insert>

    <!-- 메시지 업데이트 (삭제 상태 변경 등) -->
    <update id="updateMessage" parameterType="store.seub2hu2.message.vo.Message">
        UPDATE MESSAGES
        SET MESSAGE_TITLE = #{title}, MESSAGE_CONTENT = #{content}, MESSAGE_DELETE = #{deleted}, MESSAGE_UPDATED_DATE = NOW()
        WHERE MESSAGE_NO = #{messageNo}
    </update>




    <!-- 조건에 맞는 메시지 수 조회 -->
    <select id="getTotalRows" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM MESSAGES
        <where>
            <if test="condition.title != null">
                AND MESSAGE_TITLE LIKE CONCAT('%', #{condition.title}, '%')
            </if>
            <if test="condition.content != null">
                AND MESSAGE_CONTENT LIKE CONCAT('%', #{condition.content}, '%')
            </if>
            <!-- 조건 추가 가능 -->
        </where>
    </select>

    <!-- 조건에 맞는 메시지 목록 조회 -->
    <select id="getMessages" parameterType="map" resultType="store.seub2hu2.message.dto.MessageReceived">
        SELECT MESSAGE_NO AS messageNo, USER_NO AS userNo, MESSAGE_TITLE AS title, MESSAGE_CONTENT AS content,
        MESSAGE_CREATED_DATE AS createdDate, MESSAGE_UPDATED_DATE AS updatedDate, MESSAGE_DELETE AS deleted
        FROM MESSAGES
        <where>
            <if test="condition.title != null">
                AND MESSAGE_TITLE LIKE CONCAT('%', #{condition.title}, '%')
            </if>
            <if test="condition.content != null">
                AND MESSAGE_CONTENT LIKE CONCAT('%', #{condition.content}, '%')
            </if>
            <!-- 조건 추가 가능 -->
        </where>
        ORDER BY MESSAGE_CREATED_DATE DESC
        LIMIT #{condition.rows} OFFSET #{condition.page}
    </select>

    <!-- 메시지 수신자 삽입 -->
    <insert id="insertMessageReceiver" parameterType="map">
        INSERT INTO MESSAGE_RECEIVERS (MESSAGE_NO, USER_NO)
        VALUES (#{messageNo}, #{userNo})
    </insert>

    <update id="markMessageAsRead" parameterType="map">
        UPDATE MESSAGE_RECEIVERS
        SET MESSAGE_READ_DATE = NOW()
        WHERE MESSAGE_NO = #{messageNo}
          AND USER_NO = #{userNo}
    </update>


    <!-- 받은 메시지 조회 -->
    <select id="getReceivedMessages" parameterType="map" resultType="store.seub2hu2.message.dto.MessageReceived">
        SELECT m.MESSAGE_NO           AS messageNo,
               m.USER_NO              AS userNo,
               m.MESSAGE_TITLE        AS title,
               m.MESSAGE_CONTENT      AS content,
               m.MESSAGE_CREATED_DATE AS createdDate,
               m.MESSAGE_UPDATED_DATE AS updatedDate,
               m.MESSAGE_DELETE       AS deleted,
               u.USER_NICKNAME        AS senderNickname, -- 발신자 닉네임 추가
               r.MESSAGE_READ         AS readStatus
        FROM MESSAGES m
                 JOIN MESSAGE_RECEIVERS r ON m.MESSAGE_NO = r.MESSAGE_NO
                 JOIN USERS u ON m.USER_NO = u.USER_NO -- 발신자 정보 조회
        WHERE r.USER_NO = #{userNo}
          AND m.MESSAGE_DELETE = 'N'
        ORDER BY m.MESSAGE_CREATED_DATE DESC LIMIT 10
        OFFSET 0;
    </select>



    <!-- 보낸 메시지 조회 -->
        <select id="getSentMessages" parameterType="map" resultType="store.seub2hu2.message.dto.MessageReceived">
            SELECT MESSAGE_NO AS messageNo,
                   USER_NO AS userNo,
                   MESSAGE_TITLE AS title,
                   MESSAGE_CONTENT AS content,
                   MESSAGE_CREATED_DATE AS createdDate,
                   MESSAGE_UPDATED_DATE AS updatedDate,
                   MESSAGE_DELETE AS deleted
            FROM MESSAGES
            WHERE USER_NO = #{userNo}
              AND MESSAGE_DELETE = 'N'
            ORDER BY MESSAGE_CREATED_DATE DESC
                LIMIT 10 OFFSET 0;
        </select>


    <!-- 메시지 상세 조회 -->
    <select id="getMessageDetailByNo" parameterType="int" resultType="store.seub2hu2.message.vo.Message">
        SELECT
            m.MESSAGE_NO AS messageNo,
            m.MESSAGE_TITLE AS title,
            m.MESSAGE_CONTENT AS content,
            m.MESSAGE_CREATED_DATE AS createDate,
            m.MESSAGE_UPDATED_DATE AS updatedDate,
            u.USER_NICKNAME AS senderNickname -- 발신자 닉네임
        FROM MESSAGES m
                 JOIN USERS u ON m.USER_NO = u.USER_NO -- 발신자 정보
        WHERE m.MESSAGE_NO = #{messageNo}
    </select>



    <!-- 읽지 않은 메시지 개수 조회 -->
    <select id="countUnreadMessages" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM MESSAGE_RECEIVERS
        WHERE USER_NO = #{userNo}
          AND MESSAGE_READ = 'N'
    </select>


</mapper>




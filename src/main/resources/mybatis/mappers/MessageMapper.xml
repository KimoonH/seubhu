<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.message.mapper.MessageMapper">

    <!-- 메시지 삽입 -->
    <insert id="insertMessage">
        INSERT INTO MESSAGES (USER_NO, MESSAGE_CONTENT, MESSAGE_TITLE, MESSAGE_CREATED_DATE, MESSAGE_UPDATED_DATE)
        VALUES (#{message.userNo}, #{message.content}, #{message.title}, NOW(), NOW());
    </insert>

    <!-- 메시지 업데이트 (삭제 상태 변경 등) -->
    <update id="updateMessage">
        UPDATE MESSAGES
        SET MESSAGE_DELETE = #{message.deleted},
            MESSAGE_UPDATED_DATE = NOW()
        WHERE MESSAGE_NO = #{message.messageNo};
    </update>

    <!-- 메시지 상세 조회 -->
    <select id="getMessageDetailByNo" resultType="store.seub2hu2.message.vo.Message">
        SELECT
            MESSAGE_NO,
            USER_NO,
            MESSAGE_CONTENT,
            MESSAGE_TITLE,
            MESSAGE_CREATED_DATE,
            MESSAGE_UPDATED_DATE,
            MESSAGE_DELETE
        FROM MESSAGES
        WHERE MESSAGE_NO = #{messageNo};
    </select>

    <!-- 조건에 맞는 메시지 수 조회 -->
    <select id="getTotalRows" resultType="int">
        SELECT COUNT(*)
        FROM MESSAGE_RECEIVERS R JOIN MESSAGES M ON R.MESSAGE_NO = M.MESSAGE_NO
        WHERE R.MESSAGE_DELETE = 'N'
        AND R.USER_NO = #{condition.userNo}
        <if test="condition.opt != null">
            <choose>
                <when test="condition.opt == 'title'">
                    AND M.MESSAGE_TITLE LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'content'">
                    AND M.MESSAGE_CONTENT LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
            </choose>
        </if>
    </select>



    <!-- 조건에 맞는 메시지 목록 조회 -->
    <select id="getMessages" resultType="store.seub2hu2.message.dto.MessageRecieved">
        SELECT
            M.MESSAGE_NO as messageNo,
            M.MESSAGE_TITLE as title,
            M.MESSAGE_CONTENT as content
        FROM MESSAGES M JOIN MESSAGE_RECEIVERS R ON M.MESSAGE_NO = R.MESSAGE_NO
        WHERE R.MESSAGE_DELETE = 'N'
        AND R.USER_NO = #{condition.userNo}
        <if test="condition.opt != null">
            <choose>
                <when test="condition.opt == 'title'">
                    AND M.MESSAGE_TITLE LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'content'">
                    AND M.MESSAGE_CONTENT LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
            </choose>
        </if>
        ORDER BY R.MESSAGE_No DESC
        LIMIT #{condition.offset}, #{condition.rows};
    </select>

    <!-- 메시지 수신자 추가 -->
    <insert id="insertMessageReceiver">
        INSERT INTO MESSAGE_RECEIVERS (MESSAGE_NO, USER_NO, MESSAGE_READ, MESSAGE_READ_DATE, MESSAGE_DELETE, MESSAGE_UPDATED_DATE)
        VALUES (#{messageNo}, #{userNo}, 'N', NULL, 'N', NOW());
    </insert>

    <!-- 수신자 메시지 읽음 처리 -->
    <update id="markMessageAsRead">
        UPDATE MESSAGE_RECEIVERS
        SET MESSAGE_READ = 'Y',
            MESSAGE_READ_DATE = NOW(),
            MESSAGE_UPDATED_DATE = NOW()
        WHERE MESSAGE_NO = #{messageNo}
          AND USER_NO = #{userNo};
    </update>

    <!-- 수신 메시지 목록 조회 -->
    <select id="getReceivedMessages" resultType="store.seub2hu2.message.dto.MessageRecieved">
        SELECT
            M.MESSAGE_NO AS messageNo,
            M.MESSAGE_TITLE AS title,
            M.USER_NO AS senderUserNo,
            M.MESSAGE_CREATED_DATE AS createDate,
            R.MESSAGE_READ AS readStatus,
            R.MESSAGE_READ_DATE AS readDate
        FROM
            MESSAGE_RECEIVERS R
                INNER JOIN
            MESSAGES M
            ON
                R.MESSAGE_NO = M.MESSAGE_NO
        WHERE
            R.USER_NO = #{condition.userNo}
          AND R.MESSAGE_DELETE = 'N'
        ORDER BY M.MESSAGE_CREATED_DATE DESC
            LIMIT #{rows} OFFSET #{begin};
    </select>


    <!-- 보낸 메시지 목록 조회 -->
    <select id="getSentMessages" resultType="store.seub2hu2.message.vo.Message">
        SELECT
            MESSAGE_NO,
            MESSAGE_TITLE,
            MESSAGE_CONTENT,
            MESSAGE_CREATED_DATE
        FROM MESSAGES
        WHERE USER_NO = #{userNo}
          AND MESSAGE_DELETE = 'N'
        ORDER BY MESSAGE_CREATED_DATE DESC;
    </select>

</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.mypage.mapper.QnaMapper">

    <resultMap id="QnaCategoryMap" type="store.seub2hu2.mypage.dto.QnaCategory">
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
    </resultMap>

    <resultMap id="UserMap" type="store.seub2hu2.user.vo.User">
        <result property="no" column="user_no"/>
        <result property="nickname" column="user_nickname"/>
    </resultMap>

    <resultMap id="QnaResponseMap" type="store.seub2hu2.mypage.dto.QnaResponse">
        <result property="qnaNo" column="QNA_NO"/>
        <result property="qnaTitle" column="QNA_TITLE"/>
        <result property="qnaContent" column="QNA_CONTENT"/>
        <result property="qnaStatus" column="QNA_STATUS" typeHandler="store.seub2hu2.handler.QnaStatusTypeHandler"/>
        <result property="answerContent" column="ANSWER_CONTENT"/>
        <result property="answerCreatedDate" column="ANSWER_CREATED_DATE"/>
        <result property="qnaCreatedDate" column="QNA_CREATED_DATE"/>
        <result property="qnaUpdatedDate" column="QNA_UPDATED_DATE"/>
        <result property="qnaAnswerdDate" column="QNA_ANSWERD_DATE"/>
        <result property="qnaIsDeleted" column="QNA_ISDELETED"/>
        <result property="questionUserNo" column="QUESTION_USER_NO"/>
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="answerUserNo" column="ANSWER_USER_NO"/>

        <association property="user" resultMap="UserMap"/>
        <association property="qnaCategory" resultMap="QnaCategoryMap"/>
    </resultMap>

    <!-- List<QnaResponse> getQnasByUserNo(@Param("userNo") int userNo); -->

    <select id="getQnasByUserNo" resultMap="QnaResponseMap">
        SELECT
            q.QNA_NO, q.QNA_TITLE, q.QNA_CONTENT, q.QNA_STATUS,
            q.ANSWER_CONTENT, q.ANSWER_CREATED_DATE, q.QNA_CREATED_DATE,
            q.QNA_UPDATED_DATE, q.QNA_ANSWERD_DATE, q.QNA_ISDELETED,
            q.QUESTION_USER_NO, q.ANSWER_USER_NO, q.CATEGORY_NO,
            c.CATEGORY_NO AS CATEGORY_NO, c.CATEGORY_NAME
        FROM
            USER_QNA q
                INNER JOIN
            QNA_CATEGORY c ON q.CATEGORY_NO = c.CATEGORY_NO
        WHERE
            q.QNA_ISDELETED = 'N'
        AND
            q.QUESTION_USER_NO = #{userNo}
    </select>

    <!-- QnaResponse getQnaByQnaNo(@Param("qnaNo") int qnaNo); -->

    <select id="getQnaByQnaNo" resultMap="QnaResponseMap">
        SELECT
            q.qna_no,
            q.qna_title,
            q.qna_content,
            q.qna_created_date,
            q.qna_status,
            c.category_name
        FROM
            USER_QNA q
                INNER JOIN
            QNA_CATEGORY c ON q.category_no = c.category_no
        WHERE
            q.qna_no = #{qnaNo}
    </select>

    <!-- void insertQna(@Param("userNo") int userNo); -->

    <insert id="insertQna">
        INSERT INTO USER_QNA
        (QNA_TITLE, QNA_CONTENT, QNA_STATUS, QNA_CREATED_DATE, QNA_ISDELETED, QUESTION_USER_NO, CATEGORY_NO)
        VALUES
        (#{qna.qnaTitle}, #{qna.qnaContent}, 0, NOW(), 'N', #{qna.questionUserNo}, #{qna.categoryNo})
    </insert>

    <!-- void deleteQna(@Param("qnaNo") int qnaNo); -->

    <update id="deleteQna">
        UPDATE USER_QNA
        SET QNA_ISDELETED = 'Y', QNA_STATUS = 2
        WHERE QNA_NO = #{qnaNo}
    </update>

    <!-- void updateQna(@Param("qnaNo") int qnaNo, @Param("qna") QnaCreateRequest qnaCreateRequest); -->
    
    <update id="updateQna">
        UPDATE USER_QNA
        SET QNA_TITLE = #{qna.qnaTitle}, QNA_CONTENT = #{qna.qnaContent}, QNA_UPDATED_DATE = NOW(), CATEGORY_NO = #{qna.categoryNo}
        WHERE QNA_NO = #{qnaNo}
    </update>

    <!-- int getTotalRows(@Param("condition")Map<String, Object> condition); -->

    <select id="getTotalRows" resultType="int">
        select
            count(*) as cnt
        from
            USER_QNA uq
        JOIN
            USERS u
        ON
            u.user_no = uq.question_user_no
        JOIN
            QNA_CATEGORY qc
        ON
            qc.category_no = uq.category_no
        where uq.QNA_ISDELETED = 'N'
        <if test="condition.opt != null">
            <choose>
                <when test="condition.opt == 'title'">
                    and uq.qna_title like concat('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'writer'">
                    and u.user_nickname like concat('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'status'">
                    and uq.qna_status = #{condition.keyword}
                </when>
                <when test="condition.opt == 'category'">
                    and qc.category_name like concat('%', #{condition.keyword}, '%')
                </when>
            </choose>
        </if>
    </select>

    <!-- List<QnaResponse> getQnas(@Param("condition") Map<String, Object> condition); -->

    <select id="getQnas" resultMap="QnaResponseMap">
        SELECT *
        FROM (
            SELECT
                <if test="condition.sort != null">
                    <choose>
                        <when test="condition.sort == 'date'">
                            row_number() over (order by  uq.qna_created_date desc ) rn
                        </when>
                        <otherwise>
                            row_number() over (order by uq.qna_no desc) rn
                        </otherwise>
                    </choose>
                </if>
            , uq.qna_no
            , uq.qna_title
            , uq.qna_content
            , uq.qna_status
            , uq.answer_content
            , uq.answer_created_date
            , uq.qna_created_date
            , uq.qna_updated_date
            , uq.qna_answerd_date
            , uq.qna_isdeleted
            , uq.question_user_no
            , uq.category_no
            , uq.answer_user_no
            , qc.category_name
            , u.user_nickname
        FROM
        USER_QNA uq
        JOIN QNA_CATEGORY qc
        ON qc.category_no = uq.category_no
        JOIN USERS u
        ON u.user_no = uq.QUESTION_USER_NO
        WHERE uq.qna_isdeleted = 'N'
        <!-- 제목/내용 검색 -->
        <if test="condition.keyword != null">
            <choose>
                <when test="condition.opt == 'title'">
                    AND uq.qna_title LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'writer'">
                    AND u.user_nickname LIKE CONCAT('%', #{condition.keyword}, '%')
                </when>
                <when test="condition.opt == 'status'">
                    and uq.qna_status = #{condition.keyword}
                </when>
                <when test="condition.opt == 'category'">
                    and qc.category_name like concat('%', #{condition.keyword}, '%')
                </when>
            </choose>
        </if>
        ) AS qna
        WHERE rn BETWEEN #{condition.begin} AND #{condition.end}
        ORDER BY rn
    </select>

    <!-- void updateAnswer(@Param("answer")AnswerDTO answerDTO); -->

    <update id="updateAnswer">
        update USER_QNA
        set QNA_STATUS = #{answer.qnaStatus}, ANSWER_CONTENT = #{answer.answerContent}, ANSWER_CREATED_DATE = NOW()
        where qna_no = #{answer.qnaNo}
    </update>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.lesson.mapper.LessonMapper">

    <!--
// 전체 레슨 조회하기
    public List<Lesson> getAllLessons(@Param("param") Map<String, Object> param);

    // 레슨 번호로 조회
    public Lesson getLessonByNo(@Param("no") int no);

    // 회원 번호로 회원이 예약한 레슨 조회
    public List<Lesson> getLessonsByUserNo (@Param("userNo") int userNo);

    // 레슨 추가
    public void insertLesson(@Param("lesson") Lesson lesson);

    // 레슨 삭제
    public void deleteLessonByNo(@Param("lesson") Lesson lesson);

    // 레슨 수정
    public void updateLessonByNo(@Param("lesson") Lesson lesson);

    -->

    <!-- 모든 레슨 번호 조회하기-->
    <!-- start 레슨 시작 시간, end 레슨 종료 시간-->
    <select id="getAllLessons" resultType="store.seub2hu2.lesson.vo.Lesson">
        SELECT
        LESSON_NO AS lessonNo,
        USER_NO AS "user.no",
        LESSON_TITLE AS title,
        LESSON_PRICE AS price,
        LESSON_STATUS AS status,
        LESSON_CREATED_DATE AS createdDate,
        LESSON_PLAN AS plan,
        LESSON_START_DATE AS start,
        LESSON_END_DATE AS 'end',
        LESSON_SUBJECT AS subject
        FROM LESSONS
        WHERE (LESSON_START_DATE between DATE_FORMAT(#{param.start}, '%Y-%m-%d') and DATE_FORMAT(#{param.end}, '%Y-%m-%d')
        or LESSON_END_DATE between DATE_FORMAT(#{param.start}, '%Y-%m-%d') and DATE_FORMAT(#{param.end}, '%Y-%m-%d'))
        <if test="subject != null and subject != '전체'">
            AND LESSON_SUBJECT = #{subject}
        </if>
    </select>


    <!-- 레슨 번호로 레슨 조회하기-->
    <!-- 레슨에서 조회되는 user.no는 강사 번호-->
    <select id="getLessonByNo" resultType="store.seub2hu2.lesson.vo.Lesson">
        select L.USER_NO as 'lecturer.no'
             , L.LESSON_TITLE as title
             , L.LESSON_PRICE        as price
             , L.lesson_status       as status
             , L.lesson_created_date as createdDate
             , L.LESSON_START_DATE   as start
             , L.PARTICIPANT         as participant
             , L.lesson_plan         as plan
             , L.LESSON_SUBJECT      as subject
             , U.USER_NAME as 'lecturer.name'
        from LESSONS L
                 INNER JOIN USERS U
                            ON
                                L.USER_NO = U.USER_NO
        WHERE LESSON_NO = #{no}
    </select>

    <!-- 유저 번호로 유저가 예약 레슨 조회-->
    <select id="getLessonReservationByUserNo" resultType="store.seub2hu2.lesson.vo.LessonReservation">
        select R.LESSON_RESERVATIONS_NO           as "no"
             , R.USER_NO                          as "user.no"
             , R.LESSON_RESERVATIONS_CREATED_DATE as reservationCreatedDate
             , R.LESSON_RESERVATIONS_UPDATED_DATE as reservationUpdatedDate
             , L.LESSON_NO                        as "lesson.lessonNo"
             , L.LESSON_TITLE                     as "lesson.title"
             , L.LESSON_PRICE                     as "lesson.price"
             , L.USER_NO                          as "user.no"
             , L.lesson_status                    as "lesson.status"
             , L.lesson_created_date              as "lesson.createdDate"
             , U.USER_NAME                        as "lesson.lecturer.name"
        from LESSON_RESERVATIONS R
                 INNER JOIN LESSONS L
                            ON
                                R.LESSON_NO = L.LESSON_NO
                 INNER JOIN USERS U
                            ON
                                L.USER_NO = U.USER_NO
        where R.USER_NO = #{userNo}
    </select>

    <!-- 레슨 추가하기 -->
    <insert id="insertLesson" useGeneratedKeys="true" keyProperty="lessonNo"
            parameterType="store.seub2hu2.lesson.vo.Lesson">
        insert into LESSONS
        ( USER_NO
        , LESSON_TITLE
        , LESSON_SUBJECT
        , LESSON_PRICE
        , LESSON_PLAN
        , LESSON_START_DATE
        , LESSON_END_DATE
        )
        values ( 29
               , #{lesson.title}
               , #{lesson.subject}
               , #{lesson.price}
               , #{lesson.plan}
               , #{lesson.start}
               , #{lesson.end})
    </insert>

    <select id="getReservationByCondition" resultType="store.seub2hu2.lesson.vo.LessonReservation">
        select R.LESSON_RESERVATIONS_NO as "no"
        , R.USER_NO as "user.no"
        , R.LESSON_RESERVATIONS_CREATED_DATE as reservationCreatedDate
        , R.LESSON_RESERVATIONS_UPDATED_DATE as reservationUpdatedDate
        , L.LESSON_NO as "lesson.lessonNo"
        , L.LESSON_TITLE as "lesson.title"
        , L.LESSON_PRICE as "lesson.price"
        , L.LESSON_SUBJECT as "lesson.subject"
        , L.USER_NO as "user.no"
        , L.lesson_status as "lesson.status"
        , date_format(L.lesson_created_date, '%Y-%m-%d')
        , U.USER_NAME as "lesson.lecturer.name"
        from LESSON_RESERVATIONS R
        INNER JOIN LESSONS   L
        ON
        R.LESSON_NO = L.LESSON_NO
        INNER JOIN USERS U
        ON
        L.USER_NO = U.USER_NO
        where R.USER_NO = #{userNo}
        <choose>
            <when test="condition.searchCondition == '강사명' and condition.searchKeyword != null and condition.searchKeyword != ''">
                AND U.USER_NAME LIKE CONCAT('%', #{condition.searchKeyword}, '%')
            </when>
            <when test="condition.searchCondition == '레슨명' and condition.searchKeyword != null and condition.searchKeyword != ''">
                AND L.LESSON_TITLE LIKE CONCAT('%', #{condition.searchKeyword}, '%')
            </when>
            <when test="condition.searchCondition == '과목' and condition.searchKeyword != null and condition.searchKeyword != ''">
                AND L.LESSON_SUBJECT LIKE CONCAT('%', #{condition.searchKeyword}, '%')
            </when>
        </choose>
        <if test="condition.lessonStatus != null and condition.lessonStatus != '' and condition.lessonStatus != '모두'">
            AND L.LESSON_STATUS = #{condition.lessonStatus}
        </if>
        <if test="condition.lessonSubject != null and condition.lessonSubject != '' and condition.lessonSubject != '모두'">
            AND L.LESSON_SUBJECT = #{condition.lessonSubject}
        </if>
        <if test="condition.startDate != null">
            AND R.LESSON_RESERVATIONS_CREATED_DATE &gt;= #{condition.startDate}
        </if>
        <if test="condition.endDate != null">
            AND R.LESSON_RESERVATIONS_CREATED_DATE &lt;= #{condition.endDate}
        </if>
    </select>

    <!-- 레슨 수정 -->
    <update id="updateLessonByNo">
        UPDATE LESSONS
        SET PARTICIPANT = #{lesson.participant} + 1
          , LESSON_STATUS = #{lesson.status}
          , USER_NO = #{lesson.lecturer.no}
          , LESSON_TITLE = #{lesson.title}
          , LESSON_PLAN = #{lesson.plan}
          , LESSON_SUBJECT = #{lesson.subject}
          , LESSON_PRICE = #{lesson.price}
          , LESSON_START_DATE = DATE_FORMAT('#{lesson.start}' ,'%y-%m-%d %h:%m:%s')
          , LESSON_END_DATE = DATE_FORMAT('#{lesson.end}' ,'%y-%m-%d %h:%m:%s')
        WHERE LESSON_NO = #{lesson.no}
    </update>

    <!-- 레슨 삭제 -->
    <update id="deleteLessonByNo">
        UPDATE LESSONS
        SET LESSON_DELETED = 'Y'
        WHERE LESSON_NO = #{lesson.no}
    </update>


</mapper>
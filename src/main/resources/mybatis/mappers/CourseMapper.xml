<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.course.mapper.CourseMapper">

    <!--
        List<Course> getCourses(@Param("condition") Map<String, Object> condition);
    -->
    <select id="getCourses" resultType="store.seub2hu2.course.vo.Course">
        select *
        from (
        select row_number() over (order by c.course_no desc) rn
        , c.course_no as no
        , c.course_name as name
        , c.course_distance as distance
        , c.course_level as level
        , c.course_filename as filename
        , r.region_no as "region.no"
        , r.region_si as "region.si"
        , r.region_gu as "region.gu"
        , r.region_dong as "region.dong"
        from COURSES c, COURSE_REGION r
        where c.region_no = r.region_no
        <include refid="CoursesFilterCondition" />
        ) cr
        where rn between #{condition.begin} and #{condition.end}
    </select>


    <!--
        int getTotalRows(@Param("condition") Map<String, Object> condition);
    -->
    <select id="getTotalRows" resultType="int">
        select count(*)
        from COURSES c, COURSE_REGION r
        where c.region_no = r.region_no
        <include refid="CoursesFilterCondition" />
    </select>

    <sql id="CoursesFilterCondition">
        <if test="condition.distance != null">
            and c.course_distance <![CDATA[<=]]> #{condition.distance}
        </if>
        <if test="condition.level != null">
            and c.course_level = #{condition.level}
        </if>
        <if test="condition.keyword != null">
            and r.region_gu like concat('%', #{condition.keyword}, '%')
        </if>
    </sql>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="store.seub2hu2.community.mapper.BoardMapper">

  <!-- void insertBoard(@Param("board") Board board); -->
  <insert id="insertBoard">
    insert into BOARDS
    (
    board_cat_name
    , user_nickname
    , board_title
    , board_content
    <if test="board.uploadFile != null">
      , file_name
    </if>
    <!--            <if test="board.hashtag != null">-->
    <!--                , is_hashtag-->
    <!--            </if>-->
    )
    values
    (
    #{board.catName}
    , #{board.user.nickname}
    , #{board.title}
    , #{board.content, jdbcType=VARCHAR}
    <if test="board.uploadFile != null">
      , #{board.uploadFile.originalName}
    </if>
    <!--            <if test="board.hashtag != null">-->
    <!--                , 'Y'-->
    <!--            </if>-->
    )
    <selectKey resultType="int" keyProperty="board.no" keyColumn="board_no" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <!-- List<Board> getBoards(@Param("condition") Map<String, Object> condition); -->
  <select id="getBoards" resultType="store.seub2hu2.community.vo.Board">
    select *
    from (
          select
            <if test="condition.sort != null">
              <choose>
                <when test="condition.sort == 'date'">
                  row_number() over(order by b.board_created_date desc) rn
                </when>
                <when test="condition.sort == 'like'">
                  row_number() over(order by b.board_like desc) rn
                </when>
                <when test="condition.sort == 'viewCnt'">
                  row_number() over(order by b.board_cnt desc) rn
                </when>
                <otherwise>
                  row_number() over(order by b.board_no desc) rn
                </otherwise>
              </choose>
            </if>
            , b.board_no as no
            , b.board_cat_name as catName
            , b.board_title as title
            , b.board_content as content
            , b.board_cnt as viewCnt
            , b.board_like as `like`
            , b.is_deleted as deleted
            , b.board_created_date as createdDate
            , u.user_nickname as `user.nickname`
          from
            BOARDS b join USERS u
                on b.user_nickname = u.user_nickname
          where b.is_deleted = 'N'
          <if test="condition.category != null">
            and b.board_cat_name = #{condition.category}
          </if>
          <if test="condition.opt != null">
            <choose>
              <when test="condition.opt == 'title'">
                and b.board_title like concat ('%', #{condition.keyword}, '%')
              </when>
              <when test="condition.opt == 'content'">
                and b.board_content like concat('%', #{condition.keyword}, '%')
              </when>
              <when test="condition.opt == 'writer'">
                and b.user_nickname like concat('%', #{condition.keyword}, '%')
              </when>
            </choose>
          </if>
        ) as board
    where rn between #{condition.begin} and #{condition.end}
    order by rn
  </select>

  <!-- int getTotalRowsForBoard(@Param("condition") Map<String, Object> condition); -->
  <select id="getTotalRowsForBoard" resultType="int">
    select count(*)
    from BOARDS board
    where is_deleted = 'N'
    <if test="condition.category != null">
      and board.board_cat_name = #{condition.category}
    </if>
    <if test="condition.opt != null">
      <choose>
        <when test="condition.opt == 'title'">
          and board.board_title like concat ('%', #{condition.keyword}, '%')
        </when>
        <when test="condition.opt == 'content'">
          and board.board_content like concat('%', #{condition.keyword}, '%')
        </when>
        <when test="condition.opt == 'writer'">
          and board.user_nickname like concat('%', #{condition.keyword}, '%')
        </when>
      </choose>
    </if>
  </select>

  <!-- void updateBoard(@Param("board") Board board); -->
  <update id="updateBoard" >
    update
      BOARDS
    set
      board_cat_name = #{board.catName}
      , board_title = #{board.title}
      , board_content = #{board.content}
      , board_updated_date = sysdate()
      , is_deleted = #{board.deleted}
      <if test="board.uploadFile != null">
        , file_name = #{board.uploadFile.originalName}
      </if>
    where board_no = #{board.no}
  </update>

  <!-- void updateBoardCnt(@Param("board") Board board); -->
  <update id="updateBoardCnt">
    update
        BOARDS
    set
        board_cnt = #{board.viewCnt}
        , board_like = #{board.like}
    where board_no = #{board.no}
  </update>

  <!--  Board getBoardDetailByNo(@Param("no") int no); -->
  <select id="getBoardDetailByNo" resultType="store.seub2hu2.community.vo.Board" >
    select b.board_no            as no
     , b.board_cat_name          as catName
     , u.user_nickname           as "user.nickname"
     , b.board_title             as title
     , b.file_name               as "uploadFile.originalName"
     , b.board_content           as content
     , b.board_created_date      as createdDate
     , b.board_updated_date      as updatedDate
     , b.board_cnt               as viewCnt
     , b.scrap_cnt               as scrap
     , b.board_like              as `like`
     , b.is_deleted              as deleted
     , b.is_keep                 as `keep`
     , b.is_report               as report
     , b.is_hashtag              as hashtag
    from
      BOARDS b join USERS u
    on b.user_nickname = u.user_nickname
      join BOARD_CATEGORIES c
      on b.board_cat_name = c.board_cat_name
    where
      b.is_deleted = 'N'
      and b.board_no = #{no}
  </select>
</mapper>